on:
  push:
    tags:
      - v*

name: Release

jobs:
  quality:
    uses: ./.github/workflows/quality.yml

  release:
    needs: [quality]
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl

          - i686-pc-windows-msvc
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl

          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
        include:
          - target: aarch64-apple-darwin
            os: macOS-latest
            bin: kct
            name: kct-darwin-aarch64
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            bin: kct
            name: kct-linux-gnu-aarch64
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            bin: kct
            name: kct-linux-musl-aarch64

          - target: i686-pc-windows-msvc
            os: windows-latest
            bin: kct.exe
            name: kct-windows-msvc-i686.exe
          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
            bin: kct
            name: kct-linux-gnu-i686
          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            bin: kct
            name: kct-linux-musl-i686

          - target: x86_64-apple-darwin
            os: macOS-latest
            bin: kct
            name: kct-darwin-amd64
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            bin: kct
            name: kct-linux-gnu-amd64
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            bin: kct
            name: kct-linux-musl-amd64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            bin: kct.exe
            name: kct-windows-msvc-amd64.exe
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          profile: minimal
          toolchain: stable
          override: true

      - name: Configure cache
        uses: ./.github/actions/cache
        with:
          rustc: ${{ steps.toolchain.outputs.rustc_hash }}
          toolchain: read-write

      - name: Linux x86 cross compiler
        if: startsWith(matrix.target, 'i686-unknown-linux-')
        run: sudo apt install gcc-multilib

      - name: ARM cross compiler
        if: startsWith(matrix.target, 'aarch64-unknown-linux-') && steps.cache.outputs.toolchain != 'true'
        shell: bash
        run: which cross || cargo install cross

      - name: ARM gcc
        if: startsWith(matrix.target, 'aarch64-unknown-linux-')
        shell: bash
        run: sudo apt install gcc-aarch64-linux-gnu

      - name: Musl gcc
        if: endsWith(matrix.target, '-musl')
        shell: bash
        run: sudo apt install musl musl-tools

      - name: Run cross build
        if: startsWith(matrix.target, 'aarch64-unknown-linux-')
        shell: bash
        run: cross build --bin=kct --release --target ${{ matrix.target }}

      - name: Run build
        if: ${{ !startsWith(matrix.target, 'aarch64-unknown-linux-') }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bin=kct --release --target ${{ matrix.target }}

      - name: Create packages
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          cp ${{ matrix.bin }} ../../../${{ matrix.name }}

      - name: Generate SHA-256
        if: matrix.os != 'windows-latest'
        shell: bash
        run: shasum -a 256 ${{ matrix.name }} > ${{ matrix.name }}.sha256

      - name: Generate SHA-256 on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: Get-FileHash ${{ matrix.name }} -Algorithm SHA256 | Out-File -FilePath ${{ matrix.name }}.sha256

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "kct*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
